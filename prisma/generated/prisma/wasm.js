
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.1
 * Query Engine version: 272a37d34178c2894197e17273bf937f25acdeac
 */
Prisma.prismaVersion = {
  client: "6.17.1",
  engine: "272a37d34178c2894197e17273bf937f25acdeac"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UniversityApplicationScalarFieldEnum = {
  id: 'id',
  firstName: 'firstName',
  lastName: 'lastName',
  email: 'email',
  phone: 'phone',
  dateOfBirth: 'dateOfBirth',
  gender: 'gender',
  singleStatus: 'singleStatus',
  nationality: 'nationality',
  nID: 'nID',
  province: 'province',
  district: 'district',
  sector: 'sector',
  cell: 'cell',
  village: 'village',
  highSchool: 'highSchool',
  graduationYear: 'graduationYear',
  combination: 'combination',
  aggregateScore: 'aggregateScore',
  desiredUniveristy: 'desiredUniveristy',
  father: 'father',
  mother: 'mother',
  guardianPhone: 'guardianPhone',
  relation: 'relation',
  disability: 'disability',
  specifyDisability: 'specifyDisability',
  status: 'status',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.UniversityApplicationOrderByRelevanceFieldEnum = {
  firstName: 'firstName',
  lastName: 'lastName',
  email: 'email',
  phone: 'phone',
  nationality: 'nationality',
  province: 'province',
  district: 'district',
  sector: 'sector',
  cell: 'cell',
  village: 'village',
  highSchool: 'highSchool',
  combination: 'combination',
  desiredUniveristy: 'desiredUniveristy',
  father: 'father',
  mother: 'mother',
  specifyDisability: 'specifyDisability'
};
exports.Gender = exports.$Enums.Gender = {
  Male: 'Male',
  Female: 'Female',
  Other: 'Other'
};

exports.sStatus = exports.$Enums.sStatus = {
  Single: 'Single',
  Married: 'Married',
  Divorced: 'Divorced'
};

exports.Relationship = exports.$Enums.Relationship = {
  Father: 'Father',
  Mother: 'Mother',
  Uncle: 'Uncle',
  Aunt: 'Aunt',
  Sibling: 'Sibling',
  Other: 'Other'
};

exports.ApplicationStatus = exports.$Enums.ApplicationStatus = {
  PENDING: 'PENDING',
  UNDER_REVIEW: 'UNDER_REVIEW',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED',
  WITHDRAWN: 'WITHDRAWN'
};

exports.Prisma.ModelName = {
  UniversityApplication: 'UniversityApplication'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\Bentech\\Documents\\form\\prisma\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\Bentech\\Documents\\form\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": "../../../.env",
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../..",
  "clientVersion": "6.17.1",
  "engineVersion": "272a37d34178c2894197e17273bf937f25acdeac",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mysql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"./generated/prisma\"\n}\n\ndatasource db {\n  provider = \"mysql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel UniversityApplication {\n  id                Int          @id @default(autoincrement())\n  firstName         String       @map(\"first_name\") @db.VarChar(100)\n  lastName          String       @map(\"last_name\") @db.VarChar(100)\n  email             String       @db.VarChar(150)\n  phone             String       @db.VarChar(20)\n  dateOfBirth       DateTime     @map(\"date_of_birth\") @db.Date\n  gender            Gender       @default(Male)\n  singleStatus      sStatus      @default(Single)\n  nationality       String       @db.VarChar(200)\n  nID               Int\n  province          String       @db.VarChar(200)\n  district          String       @db.VarChar(200)\n  sector            String       @db.VarChar(200)\n  cell              String       @db.VarChar(200)\n  village           String       @db.VarChar(200)\n  highSchool        String       @db.VarChar(200)\n  graduationYear    Int          @map(\"graduation_year\")\n  combination       String       @db.VarChar(200)\n  aggregateScore    Decimal      @map(\"aggregate_score\") @db.Decimal(5, 2)\n  desiredUniveristy String       @db.VarChar(200)\n  father            String       @db.VarChar(200)\n  mother            String       @db.VarChar(200)\n  guardianPhone     Int\n  relation          Relationship @default(Father)\n  disability        Boolean      @default(false)\n  specifyDisability String?\n\n  status    ApplicationStatus @default(PENDING)\n  createdAt DateTime          @default(now()) @map(\"created_at\")\n}\n\nenum Gender {\n  Male\n  Female\n  Other\n}\n\nenum sStatus {\n  Single\n  Married\n  Divorced\n}\n\nenum Relationship {\n  Father\n  Mother\n  Uncle\n  Aunt\n  Sibling\n  Other\n}\n\nenum ApplicationStatus {\n  PENDING      @map(\"pending\")\n  UNDER_REVIEW @map(\"under_review\")\n  APPROVED     @map(\"approved\")\n  REJECTED     @map(\"rejected\")\n  WITHDRAWN    @map(\"withdrawn\")\n}\n",
  "inlineSchemaHash": "c34004adff70235c7fb1838c1349a6247d6009911f40fabefa3e3102d4af37c4",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"UniversityApplication\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"first_name\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"last_name\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dateOfBirth\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"date_of_birth\"},{\"name\":\"gender\",\"kind\":\"enum\",\"type\":\"Gender\"},{\"name\":\"singleStatus\",\"kind\":\"enum\",\"type\":\"sStatus\"},{\"name\":\"nationality\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nID\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"province\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"district\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sector\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cell\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"village\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"highSchool\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"graduationYear\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"graduation_year\"},{\"name\":\"combination\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"aggregateScore\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"aggregate_score\"},{\"name\":\"desiredUniveristy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"father\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mother\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"guardianPhone\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"relation\",\"kind\":\"enum\",\"type\":\"Relationship\"},{\"name\":\"disability\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"specifyDisability\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ApplicationStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

